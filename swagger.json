{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.2",
    "title": "Aqua Tracker API Documentation",
    "description": "Description of the /users and /water endpoints"
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://water-tracker-be-production.up.railway.app" },
    { "url": "http://localhost:3000" }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "User authorization endpoints"
    },
    {
      "name": "Water",
      "description": "Water tracker endpoints"
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "Sign-up user",
        "requestBody": {
          "description": "Sign-up user object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userEmail": {
                    "$ref": "#/components/examples/users/userEmail"
                  },
                  "userPassword": {
                    "$ref": "#/components/examples/users/userPassword"
                  }
                },
                "required": ["userEmail", "userPassword"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User was successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "$ref": "#/components/examples/users/userEmail"
                        }
                      }
                    }
                  },
                  "example": {
                    "user": {
                      "email": "example@example.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "409": {
            "description": "User with this email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "description": "Reason" }
                  },
                  "example": {
                    "message": "Email is already in use"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/signin": {
      "post": {
        "tags": ["Users"],
        "summary": "Sign-in user",
        "requestBody": {
          "description": "Sign-in user object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userEmail": {
                    "$ref": "#/components/examples/users/userEmail"
                  },
                  "userPassword": {
                    "$ref": "#/components/examples/users/userPassword"
                  }
                },
                "required": ["userEmail", "userPassword"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User was successfully signed-in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userToken": {
                      "$ref": "#/components/examples/users/userToken"
                    },
                    "user": {
                      "userEmail": {
                        "$ref": "#/components/examples/users/userEmail"
                      }
                    }
                  },
                  "example": {
                    "userToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2ZTdmMGNjNmM4ZDc4MTVlOTllMGE3YyIsImlhdCI6MTcyNjQ4Mjc1MCwiZXhwIjoxNzI3MDg3NTUwfQ.IMeRld9fDnMCLfWh7_bveDWLPKdk0wO7YZ8_lD6nO3A",
                    "user": {
                      "userEmail": "example@example.com"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Wrong credentials or no such user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "description": "Reason" }
                  },
                  "example": {
                    "message": "Email or password is wrong"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current user's data",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Operation was successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userEmail": {
                      "$ref": "#/components/examples/users/userEmail"
                    },
                    "userName": {
                      "$ref": "#/components/examples/users/userName"
                    },
                    "userAvatar": {
                      "$ref": "#/components/examples/users/userAvatar"
                    },
                    "userGender": {
                      "$ref": "#/components/examples/users/userGender"
                    },
                    "userWeight": {
                      "$ref": "#/components/examples/users/userWeight"
                    },
                    "userActiveTime": {
                      "$ref": "#/components/examples/users/userActiveTime"
                    },
                    "userWaterGoal": {
                      "$ref": "#/components/examples/users/userWaterGoal"
                    },
                    "trackerSetId": {
                      "$ref": "#/components/examples/users/trackerSetId"
                    }
                  },
                  "example": {
                    "userName": "Username",
                    "userEmail": "userS4@example.com",
                    "userAvatar": null,
                    "userGender": "female",
                    "userWeight": 65000,
                    "userActiveTime": 3,
                    "userWaterGoal": 1500,
                    "trackerSetId": "66ec7b31505ca8ba4996b088"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/signout": {
      "post": {
        "tags": ["Users"],
        "summary": "Sign-out user",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "User signed-out successfully, no body"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/": {
      "patch": {
        "tags": ["Users"],
        "summary": "Update user and upload a file if exists",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "description": "Update user object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "userEmail": {
                    "$ref": "#/components/examples/users/userEmail"
                  },
                  "userAvatar": {
                    "$ref": "#/components/examples/users/userAvatar"
                  },
                  "userGender": {
                    "$ref": "#/components/examples/users/userGender"
                  },
                  "userWeight": {
                    "$ref": "#/components/examples/users/userWeight"
                  },
                  "userActiveTime": {
                    "$ref": "#/components/examples/users/userActiveTime"
                  },
                  "userWaterGoal": {
                    "$ref": "#/components/examples/users/userWaterGoal"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User was successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Status of update operation"
                    }
                  },
                  "example": {
                    "message": "User was successfully updated"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/water/": {
      "get": {
        "tags": ["Water"],
        "summary": "Get current user's water tracker set",
        "parameters": [
          {
            "in": "query",
            "name": "year",
            "schema": {
              "type": "integer",
              "minimum": 2024
            },
            "required": true,
            "description": "Year to filter the water consumption records"
          },
          {
            "in": "query",
            "name": "month",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 12
            },
            "required": true,
            "description": "Month to filter the water consumption records"
          },
          {
            "in": "query",
            "name": "day",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 31
            },
            "required": false,
            "description": "Day to filter the water consumption records"
          }
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Operation was successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "User's id"
                      },
                      "date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "User's weight"
                      },
                      "quantity": {
                        "type": "number",
                        "description": "User's activity hours"
                      },
                      "userWaterGoal": {
                        "type": "number",
                        "description": "User's water consumption goal"
                      }
                    }
                  },
                  "example": [
                    {
                      "userWaterGoal": 1500,
                      "date": "2024-09-17T18:09:08.000Z",
                      "quantity": 250,
                      "_id": "66e9c7ed994cd2e9ea7c177e"
                    },
                    {
                      "userWaterGoal": 1500,
                      "date": "2024-09-17T18:09:08.000Z",
                      "quantity": 250,
                      "_id": "66ea7d4bfad188b6b5c10cb1"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestResponse"
                }
              }
            }
          },
          "404": {
            "description": "No water records found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "description": "Reason" }
                  },
                  "example": {
                    "message": "No water records found for this user"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BadRequestResponse": {
        "description": "Body doesn't match the requirements",
        "type": "object",
        "properties": {
          "message": { "type": "string", "description": "Reason" }
        },
        "example": {
          "message": "\"userEmail\" is required"
        }
      },
      "UnauthorizedResponse": {
        "type": "object",
        "properties": {
          "message": { "type": "string", "description": "Reason" }
        },
        "example": {
          "message": "Not authorized"
        }
      }
    },
    "examples": {
      "users": {
        "userEmail": {
          "type": "string",
          "description": "User's email",
          "pattern": "^w+([.-]?w+)*@w+([.-]?w+)*(.w{2,3})+$",
          "example": "useremail@example.com"
        },
        "userPassword": {
          "type": "string",
          "description": "User's password",
          "pattern": "^(?=.*[0-9])(?=.*[a-z])(?!.* ).{6,12}$",
          "example": "qwerty123",
          "minimum": 6,
          "maximum": 12
        },
        "userToken": {
          "type": "string",
          "description": "User's Bearer token"
        },
        "userName": {
          "type": "string",
          "description": "User's name",
          "example": "Username"
        },
        "userAvatar": {
          "type": "string",
          "format": "binary",
          "description": "Path to the user's avatar"
        },
        "userGender": {
          "type": "string",
          "description": "User's name",
          "enum": ["female", "male"],
          "example": "female"
        },
        "userWeight": {
          "type": "number",
          "description": "User's weight in grams",
          "minimum": 30000,
          "maximum": 635000,
          "example": 65000
        },
        "userActiveTime": {
          "type": "number",
          "description": "User's activity time in hours",
          "minimum": 0,
          "maximum": 24,
          "example": 3
        },
        "userWaterGoal": {
          "type": "number",
          "description": "User's water consumption goal in milliliters",
          "minimum": 1000,
          "maximum": 5000,
          "example": 1500
        },
        "trackerSetId": {
          "type": "string",
          "description": "ID of the water records set, related to the user"
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
